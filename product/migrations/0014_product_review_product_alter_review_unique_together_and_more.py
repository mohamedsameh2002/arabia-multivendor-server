# Generated by Django 5.1 on 2024-08-13 23:07

import common.utils.file_upload_paths
import common.validators.image_extension_validator
import django.db.models.deletion
import mptt.fields
import parler.fields
import parler.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('product', '0013_alter_review_unique_together_remove_review_product_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('sku', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('price_before_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price before discount')),
                ('price_after_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Price after discount')),
                ('stock_quantity', models.IntegerField(default=0, verbose_name='Stock Quantity')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available ?')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=common.utils.file_upload_paths.product_images_path, validators=[common.validators.image_extension_validator.image_extension_validator], verbose_name='Thumbnail')),
                ('image1', models.ImageField(blank=True, null=True, upload_to=common.utils.file_upload_paths.product_images_path, validators=[common.validators.image_extension_validator.image_extension_validator], verbose_name='Image 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to=common.utils.file_upload_paths.product_images_path, validators=[common.validators.image_extension_validator.image_extension_validator], verbose_name='Image 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to=common.utils.file_upload_paths.product_images_path, validators=[common.validators.image_extension_validator.image_extension_validator], verbose_name='Image 3')),
                ('image4', models.ImageField(blank=True, null=True, upload_to=common.utils.file_upload_paths.product_images_path, validators=[common.validators.image_extension_validator.image_extension_validator], verbose_name='Image 4')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Edited On')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.brand', verbose_name='Brand')),
                ('category', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.category', verbose_name='Category')),
                ('color', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.color')),
                ('size', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.size')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Supplier')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='review',
            name='product',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='product.product'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('user', 'product')},
        ),
        migrations.CreateModel(
            name='ProductTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='product.product')),
            ],
            options={
                'verbose_name': 'product Translation',
                'db_table': 'product_product_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
